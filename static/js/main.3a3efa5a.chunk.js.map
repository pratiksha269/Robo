{"version":3,"sources":["component/Card.js","component/CardList.js","component/SearchBox.js","component/Scroll.js","component/ErrorBoundary.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robot","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobot","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gOAceA,EAZF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GACzB,OACC,sBAAKC,UAAU,kDAAf,UACC,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,GAAMC,UAAU,eAC9D,gCACC,6BAAKH,IACL,6BAAKC,WCcMK,EAnBC,SAAC,GAAW,IAAVC,EAAS,EAATA,MACjB,OACC,8BAECA,EAAMC,KAAI,SAACC,EAAKC,GACf,OACA,cAAC,EAAD,CAECR,GAAIK,EAAMG,GAAGR,GACbF,KAAMO,EAAMG,GAAGV,KACfC,MAAOM,EAAMG,GAAGT,OAHXS,SCKKC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCEI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACEJ,EAAMK,YCkBKC,E,kDApBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,UAAW,GAHK,E,sDAQlB,SAAmBC,EAAOC,GACzBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG1B,WACC,OAAGG,KAAKJ,MAAMC,SACN,4DAEDG,KAAKX,MAAMK,a,GAjBQQ,aC+CbC,G,wDAxCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAbzC,EAAKX,MAAQ,CACZlB,MAAO,GACPK,YAAY,IAJA,E,qDAQd,WAAqB,IAAD,OACnByB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAE,EAAKX,SAAS,CAACvB,MAAMkC,S,oBAOpC,WAAU,IAAD,OACDC,EAAcb,KAAKJ,MAAMlB,MAAMoC,QAAO,SAAApC,GAC5C,OAAOA,EAAMP,KAAK4C,cAAcC,SAAS,EAAKpB,MAAMb,YAAYgC,kBAEjE,OAA6B,IAA1Bf,KAAKJ,MAAMlB,MAAMuC,OACZ,oBAAI3C,UAAU,KAAd,oBAGN,sBAAKA,UAAU,KAAf,UACC,+CACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,MAAOmC,e,GAhCNX,cCIHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDX,M","file":"static/js/main.3a3efa5a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id}) =>{\r\n\treturn(\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma3 grow shadow-5\">\r\n\t\t\t<img alt=\"robot\" src={`https://robohash.org/${id}`} className=\"w-80 h-100\"/>\r\n\t\t\t<div>\r\n\t\t\t\t<h3>{name}</h3>\r\n\t\t\t\t<h5>{email}</h5>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList =({robot})=>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t{\r\n\t\t\trobot.map((user,i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t<Card \r\n\t\t\t\t key={i}\r\n\t\t\t\t id={robot[i].id} \r\n\t\t\t\t name={robot[i].name} \r\n\t\t\t\t email={robot[i].email}\r\n\t\t\t\t/>\r\n\t\t\t);\t\t\t\t\r\n\t\t\t})\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange={searchChange} \r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props)=>{\r\n\treturn(\r\n\t\t<div style={{overflowY:'scroll', border:'1px solid black', height:'800px'}}> \r\n\t\t\t{props.children\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;\r\n","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\thasError : false\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcomponentsDidCatch(error, info){\r\n\t\tthis.setState({hasError: true})\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1> Oops! Something is wrong </h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;\r\n\r\n","import React, {Component} from 'react';\r\nimport CardList from '../component/CardList';\r\nimport SearchBox from '../component/SearchBox';\r\nimport Scroll from '../component/Scroll';\r\nimport ErrorBoundary from '../component/ErrorBoundary'\r\nimport './App.css'\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobot: [],\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\r\n\t\t\t.then(response=> response.json())\r\n\t\t\t.then(users=>this.setState({robot:users}));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value })\r\n\t}\r\n\r\n\trender() {\r\n\t\t\tconst filterRobot = this.state.robot.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\t\tif(this.state.robot.length===0){\r\n\t\t\treturn <h1 className='tc'>Loding</h1>\r\n\t\t}else{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1> Robofriends </h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t\t<CardList robot={filterRobot} />\r\n\t\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\t\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}